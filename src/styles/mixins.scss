@use './variables.scss' as v;

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: v.$border-radius-md;
  font-weight: v.$font-weight-medium;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
  border: none;
  text-decoration: none;

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin card-base {
  background: v.$white;
  border-radius: v.$border-radius-lg;
  box-shadow: v.$shadow-md;
  border: 1px solid v.$gray-200;
}

@mixin input-base {
  width: 100%;
  padding: v.$spacing-3 v.$spacing-4;
  border: 1px solid v.$gray-300;
  border-radius: v.$border-radius-md;
  font-size: v.$font-size-base;
  transition: border-color 0.2s ease-in-out;

  &:focus {
    outline: none;
    border-color: v.$primary-blue;
    box-shadow: 0 0 0 3px rgba(79, 124, 255, 0.1);
  }
}

/* âœ… Compare the PARAMETER, not v.$breakpoint */
@mixin responsive($bp) {
  @if $bp == sm {
    @media (min-width: v.$breakpoint-sm) { @content; }
  } @else if $bp == md {
    @media (min-width: v.$breakpoint-md) { @content; }
  } @else if $bp == lg {
    @media (min-width: v.$breakpoint-lg) { @content; }
  } @else if $bp == xl {
    @media (min-width: v.$breakpoint-xl) { @content; }
  } @else {
    @warn 'Unknown breakpoint `#{$bp}`. Use sm | md | lg | xl.';
  }
}
